@model ShoppingCart

    <link href="https://fonts.googleapis.com/css2?family=Segoe+UI:wght@400;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">

    <div class="product-detail-wrapper">
        <div class="product-detail-header">
            <h1>🌿 Product Details</h1>
        </div>
        <form method="post" class="mb-5" id="addToCartForm">
            <input asp-for="@Model.Id_Product" hidden />
            <div class="product-detail-container card border-0 shadow-lg rounded-3 overflow-hidden">
                <div class="card-header text-white py-4">
                    <div class="row">
                        <div class="col-12 text-center">
                            @if (Model?.Product != null)
                            {
                                <h2 class="text-white fw-bold">@Model.Product.NameProduct</h2>
                                <p class="text-white-50 fw-semibold mb-0">by @Model.Product.NCC</p>
                            }
                            else
                            {
                                <p class="text-danger">Error: Product not found.</p>
                            }
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row g-4 py-3 align-items-center">
                        <div class="col-12 col-lg-4 text-center">
                            @if (Model.Product.ProductImages != null && Model.Product.ProductImages.Count() > 0)
                            {
                                <div id="carouselExampleIndicators" class="carousel slide" data-bs-ride="carousel">
                                    <div class="carousel-indicators">
                                        @foreach (var imageWithIndex in Model.Product.ProductImages.Select((image, index) => new { ProductImage = image, Index = index }))
                                        {
                                            <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="@imageWithIndex.Index"
                                                    class="@(imageWithIndex.Index == 0 ? "active" : "")" aria-label="Slide @(imageWithIndex.Index + 1)"></button>
                                        }
                                    </div>
                                    <div class="carousel-inner">
                                        @foreach (var imageWithIndex in Model.Product.ProductImages.Select((image, index) => new { ProductImage = image, Index = index }))
                                        {
                                            <div class="@(imageWithIndex.Index == 0 ? "carousel-item active" : "carousel-item")">
                                                <img src="@imageWithIndex.ProductImage.ImageUrl" class="d-block rounded-3 carousel-image" alt="@Model.Product.NameProduct">
                                            </div>
                                        }
                                    </div>
                                    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="prev">
                                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                        <span class="visually-hidden">Previous</span>
                                    </button>
                                    <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="next">
                                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                        <span class="visually-hidden">Next</span>
                                    </button>
                                </div>
                            }
                            else
                            {
                                <img src="https://placehold.co/500x600/png" class="rounded-3 carousel-image" alt="@Model.Product.NameProduct">
                            }
                        </div>
                        <div class="col-12 col-lg-8">
                            <div class="mb-3">
                                <span class="badge bg-success text-white">@Model.Product.Category.Name</span>
                            </div>
                            <div class="mb-3">
                                <h6 class="text-muted">List Price: <span class="text-decoration-line-through text-danger">@Model.Product.Price.ToString("c")</span></h6>
                            </div>
                            <div class="mb-3">
                                <div class="row text-center">
                                    <div class="col-3 p-1 bg-light text-muted fw-semibold">Quantity</div>
                                    <div class="col-3 p-1 bg-light text-muted fw-semibold">1-50</div>
                                    <div class="col-3 p-1 bg-light text-muted fw-semibold">51-100</div>
                                    <div class="col-3 p-1 bg-light text-muted fw-semibold">100+</div>
                                </div>
                                <div class="row text-center">
                                    <div class="col-3 p-1 bg-white text-success fw-bold">Price</div>
                                    <div class="col-3 p-1 bg-white text-success fw-bold">@Model.Product.Price.ToString("c")</div>
                                    <div class="col-3 p-1 bg-white text-success fw-bold">@Model.Product.Price50.ToString("c")</div>
                                    <div class="col-3 p-1 bg-white text-success fw-bold">@Model.Product.Price100.ToString("c")</div>
                                </div>
                            </div>
                            <div class="mb-3">
                                <p class="text-secondary lh-lg">@Html.Raw(Model.Product.Description)</p>
                            </div>
                            <div class="mb-4 d-flex align-items-center gap-3">
                                <div class="input-group w-25">
                                    <span class="input-group-text bg-primary text-white border-0 fw-semibold">Count</span>
                                    <input asp-for="Count" type="number" value="1" min="1" class="form-control text-end" aria-label="Quantity" />
                                </div>
                                <button type="submit" class="btn btn-primary bg-gradient py-2 text-uppercase fw-semibold">Add to Cart</button>
                            </div>
                            <div class="text-end">
                                <a asp-action="Index" class="btn btn-outline-secondary bg-gradient fw-semibold btn-sm text-uppercase">Back to Home</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>

    <!-- Toast Notification (Upper Right Corner) -->
    <div class="toast-container position-fixed top-0 end-0 p-3">
        <div id="addToCartToast" class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="d-flex">
                <div class="toast-body">
                    Product added to cart successfully!
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
    </div>

    <!-- Assumed Footer Here (Not Modified) -->

    <style>
        /* Main wrapper */
        .product-detail-wrapper {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem 1rem;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        /* Product detail header (adapted from blog-header) */
        .product-detail-header {
            text-align: center;
            margin-bottom: 2rem;
            background: linear-gradient(135deg, #2d7d46, #4CAF50);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

            .product-detail-header h1 {
                font-size: 2rem;
                font-weight: 800;
                margin-bottom: 0.5rem;
                text-shadow: 2px 2px 4px rgba(0,0,0,0.1);
            }

        /* Product detail container */
        .product-detail-container {
            background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
        }

        .card-header {
            background: linear-gradient(135deg, #2d7d46, #4CAF50);
            border-radius: 0.3rem 0.3rem 0 0;
        }

        /* Fixed size for carousel items */
        .carousel-inner {
            width: 100%;
            height: 400px;
            overflow: hidden;
        }

        .carousel-item {
            width: 100%;
            height: 400px;
        }

        .carousel-image {
            width: 100%;
            height: 400px;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

            .carousel-image:hover {
                transform: scale(1.05);
            }

        .badge {
            font-size: 1rem;
            padding: 0.5rem 1rem;
            background-color: #28a745;
        }

        .btn-primary {
            background-color: #2d7d46;
            border-color: #2d7d46;
        }

            .btn-primary:hover {
                background-color: #1a5c2e;
                border-color: #1a5c2e;
                transform: translateY(-5px);
            }

        .btn-outline-secondary {
            color: #6c757d;
            border-color: #6c757d;
        }

            .btn-outline-secondary:hover {
                color: #fff;
                background-color: #6c757d;
                border-color: #6c757d;
                transform: translateY(-5px);
            }

        /* Media Query */
        @@media (max-width: 768px) {
            .product-detail-wrapper {
                padding: 1rem 0.5rem;
            }

            .product-detail-header h1 {
                font-size: 1.6rem;
            }

            .carousel-inner, .carousel-item, .carousel-image {
                height: 250px;
            }

            .input-group {
                max-width: 100%;
            }

            .btn {
                width: 100%;
                margin-bottom: 1rem;
            }
        }
    </style>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.getElementById('addToCartForm').addEventListener('submit', function(event) {
            event.preventDefault();

            fetch(this.action, {
                method: 'POST',
                body: new FormData(this),
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
            .then(response => {
                if (response.ok) {
                    const toast = new bootstrap.Toast(document.getElementById('addToCartToast'));
                    toast.show();
                    // Optional: Redirect to cart page after a delay
                    // setTimeout(() => { window.location.href = '/cart'; }, 2000);
                } else {
                    alert('Failed to add product to cart. Please try again.');
                }
            })
            .catch(error => {
                alert('An error occurred. Please try again.');
            });
        });
    </script>
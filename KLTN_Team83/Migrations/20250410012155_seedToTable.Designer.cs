// <auto-generated />
using System;
using KLTN_Team83.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KLTN_Team83.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250410012155_seedToTable")]
    partial class seedToTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KLTN_Team83.Models.Account", b =>
                {
                    b.Property<int>("id_Acc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_Acc"));

                    b.Property<string>("loginName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("passWord")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_Acc");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("KLTN_Team83.Models.Blog", b =>
                {
                    b.Property<int>("id_Blog")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_Blog"));

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_Expert")
                        .HasColumnType("int");

                    b.Property<string>("img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ngayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("tilte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_Blog");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            id_Blog = 1,
                            content = "user1@gmail.com",
                            id_Expert = 1,
                            img = "Nam",
                            ngayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            tilte = "user1"
                        },
                        new
                        {
                            id_Blog = 2,
                            content = "user1@gmail.com",
                            id_Expert = 1,
                            img = "Nam",
                            ngayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            tilte = "user2"
                        },
                        new
                        {
                            id_Blog = 3,
                            content = "user1@gmail.com",
                            id_Expert = 1,
                            img = "Nam",
                            ngayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            tilte = "user3"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
